doctype html 
html 
  head 
    title Dynamic form 
  body
    table(style='width:100%; border-collapse:collapse', border='1') 
      tr
        td(style='width:50%; padding:10px')
          h2 Element Form
          hr
          form(action="/update-elements", method="post")          
            table(style='width:auto', border='0')
              tr
                td Type:
                  span(style="color:#D8000C") * 
                td 
                  select(type="select" name="type")
                    option(value='', selected=!baseData.stored_element.rawData.type) (empty)
                    each opt in baseData.select_type
                      //- option(value=opt) #{opt}
                      option(value=opt selected=(opt===baseData.stored_element.rawData.type)) #{opt}
              tr
                td(style="vertical-align:top") ClassName: 
                td 
                  input(type="text", placeholder="classname", name="classname", value=`${ baseData.stored_element.filtered.classNameCsv }` )
                  br
                  span(style='font-size: 11px; color: #BBB') For multiple, separate by comma
              tr
                td Label:
                  span(style="color:#D8000C") *
                td 
                  input(type="text", placeholder="label", name="label", value=`${ baseData.stored_element.rawData.label }`)
              tr
                td Placeholder Text:
                  span(style="color:#D8000C") *
                td  
                  input(type="text", placeholder="placeholder", name="placeholder", value=`${ baseData.stored_element.rawData.placeholder }`)
              tr 
                td Id: 
                  span(style="color:#D8000C") *
                td 
                  input(type="text", placeholder="html_id", name="html_id", value=`${ baseData.stored_element.rawData.html_id }`)
              tr
                td Width: 
                  span(style="color:#D8000C") *
                td 
                  input(type="number", placeholder="width", name="width", value=`${ baseData.stored_element.rawData.width }`) 
              tr 
                td Height: 
                  span(style="color:#D8000C") *
                td 
                  input(type="number", placeholder="height", name="height", value=`${ baseData.stored_element.rawData.height }`)
              tr 
                td MinLength: 
                  span(style="color:#D8000C") *
                td 
                  input(type="number", placeholder="minlength", name="minlength", value=`${ baseData.stored_element.rawData.minlength }`)
              tr 
                td MaxLength: 
                  span(style="color:#D8000C") *
                td 
                  input(type="number", placeholder="maxlength", name="maxlength", value=`${ baseData.stored_element.rawData.maxlength }`)
              tr 
                td(style="vertical-align:top") Style: 
                td 
                  textarea(name="other_styles", cols="50", rows="5", style="resize:none")
                    |#{baseData.stored_element.filtered.otherStylesArray}
                  br
                  span(style='font-size: 11px;color: #BBB') For multiple, separate by comma
                  br 
                  br
                  br
                  hr
                  span(style="color:#D8000C") * 
                  span(style='font-size: 11px;color: #BBB') marked fields are required fields.
              tr 
                td
                td    
                  p 
                    button(type="submit") Generate
        
        td(style='width:50%; padding:10px; vertical-align:top', vailgn="top")
          h2 Output 
          hr
          div(style="margin-bottom:70px")
            //- form(action="/other-task", method="post")
            if baseData.stored_element.rawData.type
              if baseData.stored_element.rawData.type === 'text'
                p #{baseData.stored_element.rawData.label}                
                input(style="width:300px; padding:10px")&attributes(
                  baseData.stored_element.inputAttribute
                )
              else if baseData.stored_element.rawData.type === 'textarea'
                p #{baseData.stored_element.rawData.label}
                textarea(style="resize: none;" cols="50" rows="5")&attributes(
                  baseData.stored_element.inputAttribute
                )  
            else 
              p No active data found to create an element. 
    hr
    h2 All DB data 
    
    table(style='width:100%; border-collapse:collapse', border='1')
      each elem in baseData.allElements        
        tr
          td 
            div #{ JSON.stringify(elem) }

